package com.spring.jdbc.dao.impl;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.spring.jdbc.dao.EmployeeDao;
import com.spring.jdbc.entity.Employee;

public class EmployeeDaoImpl implements EmployeeDao {

	private JdbcTemplate template;

	// Setter is necessary as default injection is setter
	public void setTemplate(JdbcTemplate template) {
		this.template = template;
	}

	public int insert(Employee emp) {
		String query = "INSERT INTO employee(name, age, course) VALUES(?,?,?)";
		int result = this.template.update(query, emp.getName(), emp.getAge(), emp.getCourse());
		return result;
	}

	public int updateEmployee(Employee emp) {
		String query = "UPDATE employee set name=?, age =?, course=? where id=?";
		int result = this.template.update(query, emp.getName(), emp.getAge(), emp.getCourse(), emp.getId());

		return result;
	}

	public int updateEmployeeName(int id, String name) {
		String query = "update employee set name=? where id =?";
		int res = this.template.update(query,name, id);
		return res;
	}

	// to be implement
	public Employee getEmployees(int empId) {
		String query = "select * from employees";
		RowMapper<Employee> rm = new RowMapperImpl();
		
		Employee employee = this.template.queryForObject(query, rm, empId);
		return employee;
	}

	public int deleteEmployee(int empId) {
		String query = "DELETE FROM employee WHERE id = ? ";
		int res = this.template.update(query,empId);
		return res;
	}



}
